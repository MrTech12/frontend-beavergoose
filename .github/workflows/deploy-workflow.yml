name: "Creating & push Docker & deploy to Kubernetes"
on:
  push:
    branches:
      - "release-**"

jobs:
  build-push-docker:
    runs-on: ubuntu-20.04
    steps:
      - name: "checkout project code"
        uses: actions/checkout@v2

      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/beavergoose-frontend:${ GITHUB_REF_NAME }
  deploy-kubernetes:
    runs-on: ubuntu-20.04
    needs: build-push-docker
    steps:
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }}
    
    - name: Deploy to DigitalOcean's Kubernetes cluster
      run: kubectl apply -f deploy/frontend-deployment.yml
    
    - name: Verify deployment
      run: kubectl rollout status deployment/frontend-deployment

    - name: Update service on DigitalOcean's Kubernetes cluster
      run: kubectl apply -f deploy/frontend-service.yml
    
    - name: Verify new service
      run: kubectl get service frontend-service --sort-by=.metadata.name

    - name: Update ingress rules on DigitalOcean's Kubernetes cluster
      run: kubectl apply -f deploy/frontend-ingress-rules.yml
    
    - name: Verify new ingress rules
      run: kubectl describe ingress frontend-ingress